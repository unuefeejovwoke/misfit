{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","className","Control","name","placeholder","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","class","Row","href","role","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","height","width","margin","display","Message","children","Alert","Paginate","split","bg","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","moment","deliveredAt","format","PaidAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.34750336.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, } from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer,orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    \r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    \r\n    \r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n    \r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) =>{\r\n    switch (action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n            \r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        \r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    \r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline className=\"d-flex\">\r\n          <Form.Control\r\n            type=\"search\"\r\n            name='q'\r\n            placeholder=\"Search Product\"\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            className=\"me-2\"\r\n          ></Form.Control>\r\n          <Button variant=\"outline-dark\">Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar expand=\"lg\" collapseOnSelect className=\"text\">\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                    <Navbar.Brand className=\"ll\">Misfit</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\"> \r\n                            <LinkContainer to='/cart' className=\"ll\">\r\n                                    <Nav.Link ><i className=\"fas fa-shopping-cart warning\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile' className=\"ll\">\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                        \r\n                            ): (\r\n                                <LinkContainer to='/login' className=\"ll\">\r\n                                    <Nav.Link ><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                </LinkContainer>\r\n\r\n                                )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu' className=\"ll\">\r\n                                    <LinkContainer to='/admin/userlist' className=\"ll\">\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist' className=\"ll\">\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist' className=\"ll\">\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n                        \r\n                        </Nav>\r\n                        <SearchBox />\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer class=\"text-center text-white bgss\">\r\n            <Container>\r\n                <Row>\r\n                        <div class=\"container pt-4\">\r\n                            \r\n                            <section class=\"mb-4\">\r\n                        \r\n                                <a\r\n                                    class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n                                    href=\"#!\"\r\n                                    role=\"button\"\r\n                                    data-mdb-ripple-color=\"dark\"\r\n                                    ><i class=\"fab fa-facebook-f\"></i\r\n                                ></a>\r\n\r\n                            \r\n                                <a\r\n                                    class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n                                    href=\"#!\"\r\n                                    role=\"button\"\r\n                                    data-mdb-ripple-color=\"dark\"\r\n                                    ><i class=\"fab fa-twitter\"></i\r\n                                ></a>\r\n\r\n                            \r\n\r\n                                \r\n                                <a\r\n                                    class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n                                    href=\"#!\"\r\n                                    role=\"button\"\r\n                                    data-mdb-ripple-color=\"dark\"\r\n                                    ><i class=\"fab fa-instagram\"></i\r\n                                ></a>\r\n\r\n                                \r\n                                <a\r\n                                    class=\"btn btn-link btn-floating btn-lg text-dark m-1\"\r\n                                    href=\"#!\"\r\n                                    role=\"button\"\r\n                                    data-mdb-ripple-color=\"dark\"\r\n                                    ><i class=\"fab fa-linkedin\"></i\r\n                                ></a>\r\n                                <div class=\"container p-4 pb-0\">\r\n                                        <form action=\"\">\r\n                                        \r\n                                            <div class=\"row d-flex justify-content-center\">\r\n                                            \r\n                                            <div class=\"col-auto\">\r\n                                                <p class=\"pt-2\">\r\n                                                <strong>Sign up for our newsletter</strong>\r\n                                                </p>\r\n                                            </div>\r\n                                            \r\n\r\n                                            \r\n                                            <div class=\"col-md-5 col-12\">\r\n                                        \r\n                                                <div class=\"form-outline mb-4\">\r\n                                                <input type=\"email\" id=\"form5Example27\" class=\"form-control\" placeholder=\"enter email\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div class=\"col-auto\">\r\n                                                \r\n                                                <button type=\"submit\" class=\"btn btn-outline-secondary mb-4\">\r\n                                                Subscribe\r\n                                                </button>\r\n                                            </div>\r\n                                            \r\n                                            </div>\r\n                                            \r\n                                        </form>\r\n                    \r\n                                    \r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    <Col className=\"text-center py-3\"><div class=\"text-center text-light p-3 bg-secondary \">\r\n                            ©Copyright \r\n                            Misfit\r\n                        </div></Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image}></Card.Img>\r\n            </Link>\r\n\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as=\"div\">\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n            </Link>\r\n\r\n            <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n            </Card.Text>\r\n            <Card.Text as=\"h3\">\r\n                N{product.price}\r\n            </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='grow'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n                \r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <div bg='light'>\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        className=\"pag\" \r\n                        key={x + 1}\r\n                        to={!isAdmin ?\r\n                            `/?keyword=${keyword}&page=${x + 1}`\r\n                            : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        }\r\n                        \r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n\r\n        </div>\r\n        \r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark mb-4'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (N{product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel/>}\r\n            <h4 className=\"mt-3\" >Latest Products</h4>\r\n            \r\n            {loading ? <Loader />\r\n                : error ? <Message variant=\"info\">{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate variant=\"primary\" page={page}     pages={pages} keyword={keyword}/>\r\n                    </div>\r\n                        \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, ListGroupItem } from 'react-bootstrap'\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match , history}) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                :(\r\n                    <div>\r\n                        <Row className=\"mb-3\">\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid></Image>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h5>{product.name}</h5>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} /> \r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Price: N{product.price}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <strong><h5>Description :</h5></strong> {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col><strong>N{product.price}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status:</Col>\r\n                                                <Col>{product.countInStock > 0? 'In Stock' : 'Out of Stock'}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 && (\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Qty</Col>\r\n                                                            <Col xs='auto' className='my-1'>\r\n                                                                <Form.Control\r\n                                                                    as=\"select\"\r\n                                                                    value={qty}\r\n                                                                    onChange={(e) => setQty(e.target.value)}\r\n                                                                >\r\n                                                                    {\r\n\r\n                                                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                            <option key={x + 1} value={x + 1}>\r\n                                                                                {x + 1}\r\n                                                                            </option>\r\n                                                                        ))\r\n                                                                    }\r\n\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                )}\r\n\r\n                                        <ListGroup.Item className=\"d-grid gap-2\">\r\n                                            <Button onClick={addToCartHandler} className=\"btn-block\" variant=\"warning\" disabled={product.countInStock == 0} type='button'>Add to Cart</Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h5>Reviews</h5>\r\n                                {product.reviews.length === 0 && <Message variant='secondary'>No Reviews</Message>}\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825' />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h5>Write a review</h5>\r\n\r\n                                        {loadingProductReview && <Loader />}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating' className=\"mb-3\">\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment' className=\"mb-3\">\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='5'\r\n                                                        value={comment}\r\n                                                        placeholder='add a comment'\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    ></Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='warning'\r\n                                                    \r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n\r\n                                            </Form>\r\n                                        ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                            )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )\r\n        \r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({match, location,  history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h5>Shopping Cart</h5>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ): (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2} className=\"mb-3\">\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3} className=\"mb-3\">\r\n                                            <Link className=\"text-warning nounderline\" to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} className=\"mb-3\">\r\n                                            N{item.price}\r\n                                        </Col>\r\n                                        <Col md={3} className=\"mb-3\">\r\n                                            <Form.Control\r\n                                                    as=\"select\"\r\n                                                    value={item.qty}\r\n                                                    onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                                >\r\n                                                    {\r\n\r\n                                                        [...Array(item.countInStock).keys()].map((x) => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='warning'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h5>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h5>\r\n                            N{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                            <h6>Please shipping price not included, proceed to <strong>checkout page</strong></h6>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item className=\"d-grid gap-2\">\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            variant=\"warning\"\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h4>Sign In</h4>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email' className=\"mb-3\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' className=\"mb-3\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='warning'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link className=\"text-warning\"\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h4>Sign In</h4>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name' className=\"mb-3\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' className=\"mb-3\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' className=\"mb-3\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm' className=\"mb-3\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='warning'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link className=\"text-warning\"\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\n\r\nfunction ProfileScreen({ history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h4>User Profile</h4>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' className=\"mb-3\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email' className=\"mb-3\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password' className=\"mb-3\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm' className=\"mb-3\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='warning'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h4>My Orders</h4>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped bordered hover responsive className='table-sm' variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>N{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant=\"warning\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login' >\r\n                        <Nav.Link className=\"text-warning\">Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                        \r\n                    )}\r\n                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link className=\"text-warning\">Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link className=\"text-warning\">Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link className=\"text-warning\">Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h2>Shipping</h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address' className=\"mb-3\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city' className=\"mb-3\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode' className=\"mb-3\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country' className=\"mb-3\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='warning'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='warning'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 10000 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.002) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h5>Shipping</h5>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h5>Payment Method</h5>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h5>Order Items</h5>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link className=\"nounderline text-warning\" to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                        {item.qty} X N{item.price} = N{(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n\r\n                                                \r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        \r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h5>Order Summary</h5>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>N{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>N{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>N{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>N{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"d-grid gap-2\">\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                    variant=\"warning\"\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=Aej2vU6Xt4vrG13OhB-yrwfQzCZ1MKE9mUUOsHyZGY8JI0ASUrAn1QuhGIQCwUJHzfVcdmDunVT8j8ca'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay ||  order._id !== Number(orderId)  || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId,successPay, successDeliver ])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    \r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h3>Order: {order._id}</h3>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>Shipping</h3>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong><a className=\"nounderline text-warning\" href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>\r\n                                    Your Order Has Been Delivered on {' '} {moment(order.deliveredAt).format('MMMM Do, YYYY')}\r\n                                </Message>\r\n                            ) : (\r\n                                    <Message variant='warning'>Not Delivered</Message>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Payment Method</h3>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>\r\n                                    Your Order Has Been Paid on {' '} {moment(order.PaidAt).format('MMMM Do, YYYY')}\r\n                                </Message>\r\n                            ) : (\r\n                                    <Message variant='warning'>Not Paid</Message>\r\n                                )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Order Items</h3>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link className=\"nounderline text-warning\" to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                        {item.qty} X N{item.price} = N{(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n\r\n                                                \r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        \r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>N{order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>N{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>N{order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>N{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item variant='warning'>\r\n                                    {loadingPay && <Loader />}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n\r\n                        {loadingDeliver && <Loader />}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item className=\"d-grid gap-2\">\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    variant=\"warning\"\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark As Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser  } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    \r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history ,successDelete,userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Users</h3>\r\n            {loading \r\n            ? (<Loader />)\r\n            : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm text-xsmall' variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.isAdmin ? (\r\n                                        <i className='fas fa-user-check' style={{ color: 'gold' }}></i>\r\n                                    ) : (\r\n                                            <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`} className=\"m-1\">\r\n                                            <Button variant='warning' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}  variant=\"light\">\r\n\r\n                            <Form.Group controlId='name' className='mb-3'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email' className='mb-3'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin' className='mb-3'>\r\n                                <Form.Check\r\n                                    className=\"text-light\"\r\n                                    type='checkbox'\r\n                                    variant=\"warning\"\r\n                                    label='Make User Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='warning'>\r\n                                Update\r\n                            </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center m-3'>\r\n                <Col>\r\n                    <h4>Products</h4>\r\n                </Col>\r\n                \r\n                <Col className='text-right'>\r\n\r\n                    <Button className='ml-3' variant=\"warning\" onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> &nbsp; Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm' variant=\"dark\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>N{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`} className='m-1'>\r\n                                                    <Button variant='warning' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm m-1' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <FormContainer>\r\n                <h4>Edit Product / CreateProduct</h4>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name' className='mb-3'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price' className='mb-3'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image' className='mb-3'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand' className='mb-3'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock' className='mb-3'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category' className='mb-3'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description' className='mb-3'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='warning'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>Orders</h4>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm' variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>N{order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='warning' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nfunction App() {\n  return (\n    <Router>\n        <Header />\n         <main className=\"py-3\">\n           <Container>\n             <Route path='/' component={HomeScreen} exact /> \n             <Route path='/login' component={LoginScreen} />\n             <Route path='/register' component={RegisterScreen} />\n             <Route path='/profile' component={ProfileScreen} />\n             <Route path='/shipping' component={ShippingScreen} />\n             <Route path='/placeorder' component={PlaceOrderScreen} />\n             <Route path='/order/:id' component={OrderScreen} />\n             <Route path='/payment' component={PaymentScreen} />\n             \n             <Route path='/product/:id' component={ProductScreen} />\n             <Route path='/cart/:id?' component={CartScreen} />\n\n             <Route path='/admin/userlist' component={UserListScreen} />\n             <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n             <Route path='/admin/productlist' component={ProductListScreen} />\n             <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n             <Route path='/admin/orderlist' component={OrderListScreen} />\n\n             \n             \n           </Container>\n         </main>\n        <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}